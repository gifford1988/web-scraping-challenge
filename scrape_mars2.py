{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import time\n",
    "from splinter import Browser\n",
    "from bs4 import BeautifulSoup as bs\n",
    "from selenium import webdriver\n",
    "import pandas as pd\n",
    "\n",
    "def init_browser():\n",
    "    # @NOTE: Replace the path with your actual path to the chromedriver\n",
    "    executable_path = {\"executable_path\": '/usr/local/bin/chromedriver'}\n",
    "    return Browser(\"chrome\", **executable_path, headless=False)\n",
    "\n",
    "def scrape():\n",
    "    browser = init_browser()\n",
    "\n",
    "    # create mars dictionary for mongo\n",
    "    mars_data = {}\n",
    "\n",
    "    # visit website 1\n",
    "    url = \"https://mars.nasa.gov/news/\"\n",
    "    browser.visit(url)\n",
    "\n",
    "    html = browser.html\n",
    "    soup = bs(html, 'html.parser')\n",
    "\n",
    "    content_title = soup.find('div', class_='content_title').find('a')\n",
    "\n",
    "    news_title = content_title.text.strip()\n",
    "\n",
    "    article_teaser_body = soup.find('div', class_='article_teaser_body')\n",
    "\n",
    "    news_p = article_teaser_body.text.strip()\n",
    "\n",
    "    # add to mars_data\n",
    "    mars_data[\"news_title\"] = news_title\n",
    "    mars_data[\"news_p\"] = news_p\n",
    "\n",
    "    # visit website 2\n",
    "    url2 = 'https://www.jpl.nasa.gov/spaceimages/?search=&category=Mars'\n",
    "    browser.visit(url2)\n",
    "\n",
    "    baseurl = 'https://www.jpl.nasa.gov'\n",
    "\n",
    "    html2 = browser.html\n",
    "    soup2 = bs(html2, 'html.parser')\n",
    "\n",
    "    button = soup2.find('a', class_='button fancybox')\n",
    "\n",
    "    image_url = soup2.find('a', {'id': 'full_image', 'data-fancybox-href': True}).get('data-fancybox-href')\n",
    "\n",
    "    featured_image_url = baseurl + image_url\n",
    "    # add to mars_data\n",
    "    mars_data[\"featured_image_url\"] = featured_image_url\n",
    "    \n",
    "    # visit website 3\n",
    "    url3 = 'https://twitter.com/marswxreport?lang=en'\n",
    "    browser.visit(url3)\n",
    "\n",
    "    html3 = browser.html\n",
    "    soup3 = bs(html3, 'html.parser')\n",
    "\n",
    "    tweet = soup3.find('p', class_='TweetTextSize TweetTextSize--normal js-tweet-text tweet-text')\n",
    "\n",
    "    mars_weather = tweet.text.strip()\n",
    "    # add to mars_data\n",
    "    mars_data[\"mars_weather\"] = mars_weather\n",
    "\n",
    "    # website 4\n",
    "    url4 = 'https://space-facts.com/mars/'\n",
    "\n",
    "    tables = pd.read_html(url4)\n",
    "\n",
    "    df = tables[0]\n",
    "\n",
    "    table = df.to_html()\n",
    "\n",
    "    # add to mars_data\n",
    "    mars_data[\"table\"] = table\n",
    "\n",
    "    # visit website 5\n",
    "    url5 = 'https://astrogeology.usgs.gov/search/results?q=hemisphere+enhanced&k1=target&v1=Mars'\n",
    "    browser.visit(url5)\n",
    "\n",
    "    html5 = browser.html\n",
    "    soup5 = bs(html5, 'html.parser')\n",
    "\n",
    "    one = 'https://astropedia.astrogeology.usgs.gov/download/Mars/Viking/cerberus_enhanced.tif/full.jpg'\n",
    "    two = 'https://astropedia.astrogeology.usgs.gov/download/Mars/Viking/schiaparelli_enhanced.tif/full.jpg'\n",
    "    three = 'https://astropedia.astrogeology.usgs.gov/download/Mars/Viking/syrtis_major_enhanced.tif/full.jpg'\n",
    "    four = 'https://astropedia.astrogeology.usgs.gov/download/Mars/Viking/valles_marineris_enhanced.tif/full.jpg'\n",
    "\n",
    "    links = [one, two, three, four]\n",
    "\n",
    "    a = soup5.find_all('h3')\n",
    "\n",
    "    descriptions = [h3.text.strip() for h3 in a]\n",
    "\n",
    "    hemisphere_image_urls = [{'title': description, 'img_url': link} for description, link in zip(descriptions,links)]\n",
    "\n",
    "    # add to mars_data\n",
    "    mars_data[\"hemisphere_image_urls\"] = hemisphere_image_urls\n",
    "\n",
    "    # return mars_data dict\n",
    "    print(mars_data[\"featured_image_url\"])\n",
    "\n",
    "    return mars_data\n",
    "\n",
    "if __name__ == \"__main__\":\n",
    "    scrape()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
